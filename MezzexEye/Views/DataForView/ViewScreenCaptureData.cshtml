@model MezzexEye.Models.PaginatedScreenCaptureDataViewModel

@{
    ViewData["Title"] = "Screen Capture Data";
}

<h1 class="mb-4 text-center">Screen Capture Data</h1>

<div class="mb-4 text-center">
    <form id="filterForm" method="get" class="d-flex justify-content-center align-items-center flex-wrap">
        <div class="me-2 mt-3">
            <label for="username" class="form-label me-2">Username:</label>
            <select id="username" name="username" class="form-select">
                <option value="">All</option>
                @foreach (var user in ViewBag.Usernames as List<string>)
                {
                    <option value="@user">@user</option>
                }
            </select>
        </div>

        <div class="me-2 mt-3">
            <label for="date" class="form-label me-2">Date:</label>
            <input type="date" id="date" name="date" class="form-control">
        </div>

        <div class="me-2 mt-5">
            <button type="submit" class="btn btn-primary">Filter</button>
        </div>
    </form>
</div>

<div id="screenCaptureData">
    @await Html.PartialAsync("_ScreenCaptureData", Model)
</div>

<!-- Image Modal -->
<div class="modal fade" id="imageModal" tabindex="-1" aria-labelledby="imageModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content">
            <div class="modal-header d-flex justify-content-between align-items-center">
                <div class="d-flex align-items-center">
                    <h5 class="modal-title me-3" id="imageModalLabel">Screenshot</h5>
                    <div id="modalDetails" class="d-flex">
                        <p class="me-3"><strong>User:</strong> <span id="modalUsername"></span></p>
                        <p class="me-3"><strong>Created Time:</strong> <span id="modalTimestamp"></span></p>
                        <p><strong>Task Name:</strong> <span id="modalTaskName"></span></p>
                    </div>
                </div>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body text-center position-relative">
                <button type="button" class="btn btn-secondary position-absolute start-0 top-50 translate-middle-y" id="prevImage">
                    <i class="fas fa-chevron-left"></i>
                </button>
                <img src="" alt="Full Screenshot" class="img-fluid" id="modalImage">
                <button type="button" class="btn btn-secondary position-absolute end-0 top-50 translate-middle-y" id="nextImage">
                    <i class="fas fa-chevron-right"></i>
                </button>
            </div>
        </div>
    </div>
</div>

<script>
    document.getElementById('filterForm').addEventListener('submit', function (event) {
        event.preventDefault();
        loadPage(1);
    });

    function loadPage(page) {
        const formData = new FormData(document.getElementById('filterForm'));
        formData.append('page', page);
        const queryString = new URLSearchParams(formData).toString();

        fetch(`/DataForView/ViewScreenCaptureData?${queryString}`, {
            headers: {
                'X-Requested-With': 'XMLHttpRequest'
            }
        })
            .then(response => response.text())
            .then(html => {
                document.getElementById('screenCaptureData').innerHTML = html;
                attachPaginationEvents();
                attachModalEvents();
            })
            .catch(error => console.error('Error:', error));
    }

    function attachPaginationEvents() {
        document.querySelectorAll('.pagination a[data-page]').forEach(link => {
            link.addEventListener('click', function (event) {
                event.preventDefault();
                const page = this.getAttribute('data-page');
                loadPage(page);
            });
        });

        document.getElementById('prevPage').addEventListener('click', function (event) {
            event.preventDefault();
            const currentPage = parseInt(document.querySelector('.pagination .active a').getAttribute('data-page'));
            if (currentPage > 1) {
                loadPage(currentPage - 1);
            }
        });

        document.getElementById('nextPage').addEventListener('click', function (event) {
            event.preventDefault();
            const currentPage = parseInt(document.querySelector('.pagination .active a').getAttribute('data-page'));
            const totalPages = @Model.TotalPages;
            if (currentPage < totalPages) {
                loadPage(currentPage + 1);
            }
        });
    }

    function attachModalEvents() {
        var imageModal = document.getElementById('imageModal');
        var allImages = [];
        var currentIndex = 0;

        function updateModalDetails(imageUrl) {
            var currentImageElement = document.querySelector('img[data-bs-img="' + imageUrl + '"]');
            var username = currentImageElement.getAttribute('data-bs-username');
            var timestamp = currentImageElement.getAttribute('data-bs-timestamp');
            var taskName = currentImageElement.getAttribute('data-bs-taskname');

            var modalUsername = document.getElementById('modalUsername');
            var modalTimestamp = document.getElementById('modalTimestamp');
            var modalTaskName = document.getElementById('modalTaskName');

            modalUsername.textContent = username;
            modalTimestamp.textContent = timestamp;
            modalTaskName.textContent = taskName;
        }

        imageModal.addEventListener('show.bs.modal', function (event) {
            var button = event.relatedTarget;
            var imageUrl = button.getAttribute('data-bs-img');
            currentIndex = 0;

            allImages = Array.from(document.querySelectorAll('img[data-bs-username="' + button.getAttribute('data-bs-username') + '"]')).map(img => img.getAttribute('data-bs-img'));

            var modalImage = imageModal.querySelector('#modalImage');

            modalImage.src = imageUrl;
            currentIndex = allImages.indexOf(imageUrl);

            updateModalDetails(imageUrl);
        });

        document.getElementById('prevImage').addEventListener('click', function () {
            if (allImages.length > 0) {
                currentIndex = (currentIndex - 1 + allImages.length) % allImages.length;
                var newImageUrl = allImages[currentIndex];
                document.getElementById('modalImage').src = newImageUrl;
                updateModalDetails(newImageUrl);
            }
        });

        document.getElementById('nextImage').addEventListener('click', function () {
            if (allImages.length > 0) {
                currentIndex = (currentIndex + 1) % allImages.length;
                var newImageUrl = allImages[currentIndex];
                document.getElementById('modalImage').src = newImageUrl;
                updateModalDetails(newImageUrl);
            }
        });
    }

    document.addEventListener('DOMContentLoaded', function () {
        attachPaginationEvents();
        attachModalEvents();
    });
</script>

<style>
    .modal-lg {
        max-width: 90%;
    }

    #modalDetails p {
        margin: 0;
    }

    .modal-body {
        max-height: 80vh;
        overflow-y: auto;
    }

    .position-absolute {
        z-index: 2;
    }

    .btn-secondary {
        background-color: rgba(0, 0, 0, 0.5);
        border: none;
    }

        .btn-secondary i {
            color: white;
        }

    #filterForm label {
        margin-bottom: 0;
    }

    #filterForm {
        gap: 1rem; /* Adds space between the form elements */
    }

        #filterForm .form-label {
            margin-bottom: 0.5rem;
        }

        #filterForm .form-select,
        #filterForm .form-control,
        #filterForm .btn {
            margin-bottom: 0;
        }

    #modalDetails p {
        margin: 0.5rem 0;
    }
</style>
