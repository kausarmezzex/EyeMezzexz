@model EyeMezzexz.Models.TaskNames

@{
    ViewData["Title"] = "Edit Task";
    var isUk = Model.CountryId == 1; // Assuming '1' is the ID for the United Kingdom
}

<h2>Edit Task</h2>

<form asp-action="Edit" method="post" class="needs-validation" novalidate>

    <div class="mb-3">
        <label asp-for="Name" class="form-label">Name</label>
        <input asp-for="Name" class="form-control" required />
        <div class="invalid-feedback">
            Please enter a name.
        </div>
    </div>

    <div class="mb-3">
        <label asp-for="ParentTaskId" class="form-label">Parent Task</label>
        <select asp-for="ParentTaskId" class="form-select">
            <option value="">[None]</option>
            @foreach (var task in (IEnumerable<SelectListItem>)ViewBag.Tasks)
            {
                <option value="@task.Value" selected="@(task.Selected ? "selected" : null)">@task.Text</option>
            }
        </select>
    </div>

    @if (isUk)
    {
        <div class="mb-3">
            <div class="form-check">
                <input type="checkbox" class="form-check-input" id="ComputerRequired" name="ComputerRequired"
                       value="true" @(Model.ComputerRequired ?? false ? "checked" : "") />
                <input type="hidden" name="ComputerRequired" value="false" />
                <label asp-for="ComputerRequired" class="form-check-label">Computer Required</label>
            </div>
        </div>
    }

    <div class="mb-3">
        <div class="form-check">
            <input type="checkbox" class="form-check-input" id="IsDeleted" name="IsDeleted"
                   value="true" @(Model.IsDeleted ?? false ? "checked" : "") />
            <input type="hidden" name="IsDeleted" value="false" />
            <label asp-for="IsDeleted" class="form-check-label">Mark as Deleted</label>
        </div>
    </div>

    <div class="mb-3">
        <label asp-for="CountryId" class="form-label">Country</label>
        <select asp-for="CountryId" class="form-select" id="country-select">
            @foreach (var country in (IEnumerable<SelectListItem>)ViewBag.Countries)
            {
                <option value="@country.Value" selected="@(country.Selected ? "selected" : null)">@country.Text</option>
            }
        </select>
    </div>

    <div class="mb-3">
        <label asp-for="TaskCreatedBy" class="form-label">Created By</label>
        <input asp-for="TaskCreatedBy" class="form-control" readonly />
    </div>

    <div class="mb-3">
        <label asp-for="TaskCreatedOn" class="form-label">Created On</label>
        <input asp-for="TaskCreatedOn" class="form-control" readonly />
    </div>

    <div class="mb-3">
        <label asp-for="SubTasks" class="form-label">Sub Tasks</label>
        <ul>
            @foreach (var subTask in Model.SubTasks)
            {
                <li>@subTask.Name</li>
            }
        </ul>
    </div>

    <input type="hidden" asp-for="Id" />
    <input type="hidden" asp-for="CountryId" />

    <div class="mb-3">
        <input type="submit" value="Save" class="btn btn-primary" />
    </div>
</form>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        // JavaScript to toggle between displaying the country name and the dropdown list
        document.getElementById('country-display').onclick = function () {
            document.getElementById('country-display').style.display = 'none';
            document.getElementById('country-select').style.display = 'block';
        };

        // Update the hidden input with the selected country name
        document.getElementById('country-select').onchange = function () {
            var selectedOption = this.options[this.selectedIndex];
            document.getElementById('CountryName').value = selectedOption.text;
        };
    </script>
}
